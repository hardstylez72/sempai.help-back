[10/30/2018 - 16:26:56::148] [INFO]: [SEMPAI.HELP] Приложение запущено на порту: 4000
[10/30/2018 - 16:26:56::266] [INFO]: [SocketIO] Слушает на порту 4001
[10/30/2018 - 16:26:56::275] [INFO]: [Redis]: Успешное подключение
[10/30/2018 - 16:26:56::279] [INFO]: [Redis]: Готов к использованию
[10/30/2018 - 16:26:56::303] [INFO]: Executing (default): SELECT 1+1 AS result
[10/30/2018 - 16:26:56::304] [INFO]: [Sequelize]: Успешное подключение к БД sempai под юзером sempai
[10/30/2018 - 16:26:56::334] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS links;
[10/30/2018 - 16:26:56::339] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS users;
[10/30/2018 - 16:26:56::345] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS tastes;
[10/30/2018 - 16:26:56::347] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS tracks;
[10/30/2018 - 16:26:56::349] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "links"."links" ("id"  SERIAL UNIQUE , "link" VARCHAR(1000) NOT NULL, "descr" VARCHAR(4000) NOT NULL, "user_id" INTEGER NOT NULL, "abstract" VARCHAR(200) NOT NULL, "deleted" BOOLEAN DEFAULT 'false', "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
[10/30/2018 - 16:26:56::351] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'links' AND s.oid = t.relnamespace AND s.nspname = 'links' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 16:26:56::359] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "users"."users" ("id"  SERIAL UNIQUE , "name" VARCHAR(40) NOT NULL, "pwd" VARCHAR(40) NOT NULL, "role_id" INTEGER NOT NULL, "deleted" BOOLEAN DEFAULT 'false', "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
[10/30/2018 - 16:26:56::361] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' AND s.oid = t.relnamespace AND s.nspname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 16:26:56::368] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "tracks"."tracks" ("id"  SERIAL UNIQUE , "name" VARCHAR(1024) NOT NULL, "path" VARCHAR(1024) NOT NULL, "uploader_id" INTEGER, "deleted" BOOLEAN DEFAULT 'false', "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
[10/30/2018 - 16:26:56::369] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tracks' AND s.oid = t.relnamespace AND s.nspname = 'tracks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 16:26:56::373] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "tastes"."tastes" ("user_id" INTEGER NOT NULL  REFERENCES "users"."users" ("id") ON DELETE NO ACTION ON UPDATE CASCADE, "track_id" INTEGER NOT NULL  REFERENCES "tracks"."tracks" ("id") ON DELETE NO ACTION ON UPDATE CASCADE, "deleted" BOOLEAN DEFAULT false, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("user_id","track_id"));
[10/30/2018 - 16:26:56::376] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tastes' AND s.oid = t.relnamespace AND s.nspname = 'tastes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 16:26:56::392] [INFO]: Executing (default): INSERT INTO "users"."users" ("id","name","pwd","role_id","deleted","createdAt","updatedAt") VALUES (DEFAULT,'1','1',1,false,'2018-10-30 13:26:56.386 +00:00','2018-10-30 13:26:56.386 +00:00') RETURNING *;
[10/30/2018 - 16:26:56::398] [INFO]: Executing (default): INSERT INTO "users"."users" ("id","name","pwd","role_id","deleted","createdAt","updatedAt") VALUES (DEFAULT,'2','2',1,false,'2018-10-30 13:26:56.396 +00:00','2018-10-30 13:26:56.396 +00:00') RETURNING *;
[10/30/2018 - 17:22:25::779] [INFO]: [SEMPAI.HELP] Приложение запущено на порту: 4000
[10/30/2018 - 17:22:25::987] [INFO]: [SocketIO] Слушает на порту 4001
[10/30/2018 - 17:22:25::997] [INFO]: [Redis]: Повторное подключение
[10/30/2018 - 17:22:31::406] [INFO]: [Redis]: Повторное подключение
[10/30/2018 - 17:23:20::406] [INFO]: [SEMPAI.HELP] Приложение запущено на порту: 4000
[10/30/2018 - 17:23:20::612] [INFO]: [SocketIO] Слушает на порту 4001
[10/30/2018 - 17:23:20::622] [INFO]: [Redis]: Успешное подключение
[10/30/2018 - 17:23:20::626] [INFO]: [Redis]: Готов к использованию
[10/30/2018 - 17:23:20::661] [INFO]: Executing (default): SELECT 1+1 AS result
[10/30/2018 - 17:23:20::663] [INFO]: [Sequelize]: Успешное подключение к БД sempai под юзером sempai
[10/30/2018 - 17:23:20::683] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS links;
[10/30/2018 - 17:23:20::689] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS users;
[10/30/2018 - 17:23:20::692] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS tastes;
[10/30/2018 - 17:23:20::697] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS tracks;
[10/30/2018 - 17:23:20::699] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "links"."links" ("id"  SERIAL UNIQUE , "link" VARCHAR(1000) NOT NULL, "descr" VARCHAR(4000) NOT NULL, "user_id" INTEGER NOT NULL, "abstract" VARCHAR(200) NOT NULL, "deleted" BOOLEAN DEFAULT 'false', "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
[10/30/2018 - 17:23:20::710] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'links' AND s.oid = t.relnamespace AND s.nspname = 'links' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 17:23:20::720] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "users"."users" ("id"  SERIAL UNIQUE , "name" VARCHAR(40) NOT NULL, "pwd" VARCHAR(40) NOT NULL, "role_id" INTEGER NOT NULL, "deleted" BOOLEAN DEFAULT 'false', "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
[10/30/2018 - 17:23:20::729] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' AND s.oid = t.relnamespace AND s.nspname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 17:23:20::738] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "tracks"."tracks" ("id"  SERIAL UNIQUE , "name" VARCHAR(1024) NOT NULL, "path" VARCHAR(1024) NOT NULL, "uploader_id" INTEGER, "deleted" BOOLEAN DEFAULT 'false', "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
[10/30/2018 - 17:23:20::751] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tracks' AND s.oid = t.relnamespace AND s.nspname = 'tracks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 17:23:20::760] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "tastes"."tastes" ("user_id" INTEGER NOT NULL  REFERENCES "users"."users" ("id") ON DELETE NO ACTION ON UPDATE CASCADE, "track_id" INTEGER NOT NULL  REFERENCES "tracks"."tracks" ("id") ON DELETE NO ACTION ON UPDATE CASCADE, "deleted" BOOLEAN DEFAULT false, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("user_id","track_id"));
[10/30/2018 - 17:23:20::768] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tastes' AND s.oid = t.relnamespace AND s.nspname = 'tastes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 17:23:20::783] [INFO]: Executing (default): INSERT INTO "users"."users" ("id","name","pwd","role_id","deleted","createdAt","updatedAt") VALUES (DEFAULT,'1','1',1,false,'2018-10-30 14:23:20.777 +00:00','2018-10-30 14:23:20.777 +00:00') RETURNING *;
[10/30/2018 - 17:23:20::791] [INFO]: Executing (default): INSERT INTO "users"."users" ("id","name","pwd","role_id","deleted","createdAt","updatedAt") VALUES (DEFAULT,'2','2',1,false,'2018-10-30 14:23:20.788 +00:00','2018-10-30 14:23:20.788 +00:00') RETURNING *;
[10/30/2018 - 17:23:55::311] [INFO]: Executing (default): SELECT "id", "name", "pwd", "role_id", "deleted", "createdAt", "updatedAt" FROM "users"."users" AS "users" WHERE "users"."name" = '1' AND "users"."pwd" = '1' LIMIT 1;
[10/30/2018 - 17:23:56::729] [INFO]: Успешное прохождение авторизации при подключении к сокету
[10/30/2018 - 17:23:56::731] [INFO]: User connected
[10/30/2018 - 17:23:56::734] [INFO]: process.env.CONTENT_PATH = 
[10/30/2018 - 17:23:56::782] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks";
[10/30/2018 - 17:23:56::802] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 01 Ride In.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 01 Ride In.mp3',false,'2018-10-30 14:23:56.794 +00:00','2018-10-30 14:23:56.794 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 01 Ride In.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 01 Ride In.mp3',"updatedAt"='2018-10-30 14:23:56.794 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::810] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 02 Dusty Fingers.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 02 Dusty Fingers.mp3',false,'2018-10-30 14:23:56.806 +00:00','2018-10-30 14:23:56.806 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 02 Dusty Fingers.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 02 Dusty Fingers.mp3',"updatedAt"='2018-10-30 14:23:56.806 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::821] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 03 Born In Cologne.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 03 Born In Cologne.mp3',false,'2018-10-30 14:23:56.815 +00:00','2018-10-30 14:23:56.815 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 03 Born In Cologne.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 03 Born In Cologne.mp3',"updatedAt"='2018-10-30 14:23:56.815 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::827] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 04 WIld Bunch.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 04 WIld Bunch.mp3',false,'2018-10-30 14:23:56.823 +00:00','2018-10-30 14:23:56.823 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 04 WIld Bunch.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 04 WIld Bunch.mp3',"updatedAt"='2018-10-30 14:23:56.823 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::834] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 05 Arrival.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 05 Arrival.mp3',false,'2018-10-30 14:23:56.830 +00:00','2018-10-30 14:23:56.830 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 05 Arrival.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 05 Arrival.mp3',"updatedAt"='2018-10-30 14:23:56.830 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::840] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 06 Lager.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 06 Lager.mp3',false,'2018-10-30 14:23:56.837 +00:00','2018-10-30 14:23:56.837 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 06 Lager.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 06 Lager.mp3',"updatedAt"='2018-10-30 14:23:56.837 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::847] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 07 Make It Disappear.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 07 Make It Disappear.mp3',false,'2018-10-30 14:23:56.843 +00:00','2018-10-30 14:23:56.843 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 07 Make It Disappear.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 07 Make It Disappear.mp3',"updatedAt"='2018-10-30 14:23:56.843 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::854] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 08 We Are Sorry.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 08 We Are Sorry.mp3',false,'2018-10-30 14:23:56.850 +00:00','2018-10-30 14:23:56.850 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 08 We Are Sorry.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 08 We Are Sorry.mp3',"updatedAt"='2018-10-30 14:23:56.850 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::861] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 09 All The Way.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 09 All The Way.mp3',false,'2018-10-30 14:23:56.857 +00:00','2018-10-30 14:23:56.857 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 09 All The Way.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 09 All The Way.mp3',"updatedAt"='2018-10-30 14:23:56.857 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::868] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 10 Take My Eyes.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 10 Take My Eyes.mp3',false,'2018-10-30 14:23:56.864 +00:00','2018-10-30 14:23:56.864 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 10 Take My Eyes.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 10 Take My Eyes.mp3',"updatedAt"='2018-10-30 14:23:56.864 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::875] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 11 Dear User.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 11 Dear User.mp3',false,'2018-10-30 14:23:56.871 +00:00','2018-10-30 14:23:56.871 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 11 Dear User.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 11 Dear User.mp3',"updatedAt"='2018-10-30 14:23:56.871 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::883] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 12 Ebb & Flood.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 12 Ebb & Flood.mp3',false,'2018-10-30 14:23:56.878 +00:00','2018-10-30 14:23:56.878 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 12 Ebb & Flood.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 12 Ebb & Flood.mp3',"updatedAt"='2018-10-30 14:23:56.878 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::890] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - Crisis - 13 Rhapsody.mp3','/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 13 Rhapsody.mp3',false,'2018-10-30 14:23:56.886 +00:00','2018-10-30 14:23:56.886 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - Crisis - 13 Rhapsody.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Cologne - Crisis/Cologne - Crisis - 13 Rhapsody.mp3',"updatedAt"='2018-10-30 14:23:56.886 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::897] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3','/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3',false,'2018-10-30 14:23:56.893 +00:00','2018-10-30 14:23:56.893 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3',"updatedAt"='2018-10-30 14:23:56.893 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::903] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3','/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3',false,'2018-10-30 14:23:56.899 +00:00','2018-10-30 14:23:56.899 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3',"updatedAt"='2018-10-30 14:23:56.899 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::910] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3','/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3',false,'2018-10-30 14:23:56.906 +00:00','2018-10-30 14:23:56.906 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3',"updatedAt"='2018-10-30 14:23:56.906 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::916] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3','/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3',false,'2018-10-30 14:23:56.913 +00:00','2018-10-30 14:23:56.913 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3',"updatedAt"='2018-10-30 14:23:56.913 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::922] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3','/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3',false,'2018-10-30 14:23:56.919 +00:00','2018-10-30 14:23:56.919 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3',"updatedAt"='2018-10-30 14:23:56.919 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::929] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3','/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3',false,'2018-10-30 14:23:56.925 +00:00','2018-10-30 14:23:56.925 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3',"updatedAt"='2018-10-30 14:23:56.925 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::936] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3','/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3',false,'2018-10-30 14:23:56.932 +00:00','2018-10-30 14:23:56.932 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3',"updatedAt"='2018-10-30 14:23:56.932 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::943] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 01 Raining in LA.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 01 Raining in LA.mp3',false,'2018-10-30 14:23:56.939 +00:00','2018-10-30 14:23:56.939 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 01 Raining in LA.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 01 Raining in LA.mp3',"updatedAt"='2018-10-30 14:23:56.939 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::955] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 02 Take it Slow (feat. Marionismagical).mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 02 Take it Slow (feat. Marionismagical).mp3',false,'2018-10-30 14:23:56.947 +00:00','2018-10-30 14:23:56.947 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 02 Take it Slow (feat. Marionismagical).mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 02 Take it Slow (feat. Marionismagical).mp3',"updatedAt"='2018-10-30 14:23:56.947 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::961] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 03 Adult Swim Bump #1.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 03 Adult Swim Bump #1.mp3',false,'2018-10-30 14:23:56.957 +00:00','2018-10-30 14:23:56.957 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 03 Adult Swim Bump #1.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 03 Adult Swim Bump #1.mp3',"updatedAt"='2018-10-30 14:23:56.957 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::968] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 04 Swimming Pool.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 04 Swimming Pool.mp3',false,'2018-10-30 14:23:56.963 +00:00','2018-10-30 14:23:56.963 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 04 Swimming Pool.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 04 Swimming Pool.mp3',"updatedAt"='2018-10-30 14:23:56.963 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::976] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 05 Adult Swim Bump #2.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 05 Adult Swim Bump #2.mp3',false,'2018-10-30 14:23:56.971 +00:00','2018-10-30 14:23:56.971 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 05 Adult Swim Bump #2.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 05 Adult Swim Bump #2.mp3',"updatedAt"='2018-10-30 14:23:56.971 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::983] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 06 What I Do Everyday.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 06 What I Do Everyday.mp3',false,'2018-10-30 14:23:56.978 +00:00','2018-10-30 14:23:56.978 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 06 What I Do Everyday.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 06 What I Do Everyday.mp3',"updatedAt"='2018-10-30 14:23:56.978 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::989] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 07 Two Girls One Cup.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 07 Two Girls One Cup.mp3',false,'2018-10-30 14:23:56.985 +00:00','2018-10-30 14:23:56.985 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 07 Two Girls One Cup.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 07 Two Girls One Cup.mp3',"updatedAt"='2018-10-30 14:23:56.985 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:56::997] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 08 I Know I Made It.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 08 I Know I Made It.mp3',false,'2018-10-30 14:23:56.991 +00:00','2018-10-30 14:23:56.991 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 08 I Know I Made It.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 08 I Know I Made It.mp3',"updatedAt"='2018-10-30 14:23:56.991 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::004] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 09 LoFi House.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 09 LoFi House.mp3',false,'2018-10-30 14:23:57.000 +00:00','2018-10-30 14:23:57.000 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 09 LoFi House.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 09 LoFi House.mp3',"updatedAt"='2018-10-30 14:23:57.000 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::010] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 10 Grunge Trap.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 10 Grunge Trap.mp3',false,'2018-10-30 14:23:57.007 +00:00','2018-10-30 14:23:57.007 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 10 Grunge Trap.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 10 Grunge Trap.mp3',"updatedAt"='2018-10-30 14:23:57.007 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::017] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 11 LoFi Hip Hop.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 11 LoFi Hip Hop.mp3',false,'2018-10-30 14:23:57.013 +00:00','2018-10-30 14:23:57.013 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 11 LoFi Hip Hop.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 11 LoFi Hip Hop.mp3',"updatedAt"='2018-10-30 14:23:57.013 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::024] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 12 Feeling Your Wave.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 12 Feeling Your Wave.mp3',false,'2018-10-30 14:23:57.019 +00:00','2018-10-30 14:23:57.019 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 12 Feeling Your Wave.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 12 Feeling Your Wave.mp3',"updatedAt"='2018-10-30 14:23:57.019 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::031] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 13 Crazy Wavy Baby.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 13 Crazy Wavy Baby.mp3',false,'2018-10-30 14:23:57.026 +00:00','2018-10-30 14:23:57.026 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 13 Crazy Wavy Baby.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 13 Crazy Wavy Baby.mp3',"updatedAt"='2018-10-30 14:23:57.026 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::038] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 14 Trying My Best.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 14 Trying My Best.mp3',false,'2018-10-30 14:23:57.034 +00:00','2018-10-30 14:23:57.034 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 14 Trying My Best.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 14 Trying My Best.mp3',"updatedAt"='2018-10-30 14:23:57.034 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::045] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 15 Every Everything.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 15 Every Everything.mp3',false,'2018-10-30 14:23:57.041 +00:00','2018-10-30 14:23:57.041 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 15 Every Everything.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 15 Every Everything.mp3',"updatedAt"='2018-10-30 14:23:57.041 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::053] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 16 By Myself.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 16 By Myself.mp3',false,'2018-10-30 14:23:57.047 +00:00','2018-10-30 14:23:57.047 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 16 By Myself.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 16 By Myself.mp3',"updatedAt"='2018-10-30 14:23:57.047 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::061] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 17 Million Ways to Love You (feat. Marionismagical).mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 17 Million Ways to Love You (feat. Marionismagical).mp3',false,'2018-10-30 14:23:57.057 +00:00','2018-10-30 14:23:57.057 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 17 Million Ways to Love You (feat. Marionismagical).mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 17 Million Ways to Love You (feat. Marionismagical).mp3',"updatedAt"='2018-10-30 14:23:57.057 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::068] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 18 Touch You (feat. Marionismagical).mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 18 Touch You (feat. Marionismagical).mp3',false,'2018-10-30 14:23:57.063 +00:00','2018-10-30 14:23:57.063 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 18 Touch You (feat. Marionismagical).mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 18 Touch You (feat. Marionismagical).mp3',"updatedAt"='2018-10-30 14:23:57.063 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::077] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 19 So in Love with You.mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 19 So in Love with You.mp3',false,'2018-10-30 14:23:57.072 +00:00','2018-10-30 14:23:57.072 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 19 So in Love with You.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 19 So in Love with You.mp3',"updatedAt"='2018-10-30 14:23:57.072 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::085] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 20 Be Mine (feat. JustMakeMeCry).mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 20 Be Mine (feat. JustMakeMeCry).mp3',false,'2018-10-30 14:23:57.080 +00:00','2018-10-30 14:23:57.080 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 20 Be Mine (feat. JustMakeMeCry).mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 20 Be Mine (feat. JustMakeMeCry).mp3',"updatedAt"='2018-10-30 14:23:57.080 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::092] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FrankJavCee - Volume 2​.​123 Collection - 21 Please Don''t Leave Me Behind (feat. Marionismagical).mp3','/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 21 Please Don''t Leave Me Behind (feat. Marionismagical).mp3',false,'2018-10-30 14:23:57.087 +00:00','2018-10-30 14:23:57.087 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FrankJavCee - Volume 2​.​123 Collection - 21 Please Don''t Leave Me Behind (feat. Marionismagical).mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/FrankJavCee - Volume 2_._123 Collection/FrankJavCee - Volume 2​.​123 Collection - 21 Please Don''t Leave Me Behind (feat. Marionismagical).mp3',"updatedAt"='2018-10-30 14:23:57.087 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::098] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 01 Edge.mp3','/media/bozdo/Новый том1/music/CASUAL/Minnesota - Curio/Minnesota - Curio - 01 Edge.mp3',false,'2018-10-30 14:23:57.094 +00:00','2018-10-30 14:23:57.094 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 01 Edge.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Minnesota - Curio/Minnesota - Curio - 01 Edge.mp3',"updatedAt"='2018-10-30 14:23:57.094 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::105] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 02 Technique.mp3','/media/bozdo/Новый том1/music/CASUAL/Minnesota - Curio/Minnesota - Curio - 02 Technique.mp3',false,'2018-10-30 14:23:57.101 +00:00','2018-10-30 14:23:57.101 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 02 Technique.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Minnesota - Curio/Minnesota - Curio - 02 Technique.mp3',"updatedAt"='2018-10-30 14:23:57.101 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::113] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 03 Dark Crystal.mp3','/media/bozdo/Новый том1/music/CASUAL/Minnesota - Curio/Minnesota - Curio - 03 Dark Crystal.mp3',false,'2018-10-30 14:23:57.107 +00:00','2018-10-30 14:23:57.107 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 03 Dark Crystal.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Minnesota - Curio/Minnesota - Curio - 03 Dark Crystal.mp3',"updatedAt"='2018-10-30 14:23:57.107 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::120] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 04 Desert Diamond.mp3','/media/bozdo/Новый том1/music/CASUAL/Minnesota - Curio/Minnesota - Curio - 04 Desert Diamond.mp3',false,'2018-10-30 14:23:57.115 +00:00','2018-10-30 14:23:57.115 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 04 Desert Diamond.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Minnesota - Curio/Minnesota - Curio - 04 Desert Diamond.mp3',"updatedAt"='2018-10-30 14:23:57.115 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::127] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 05 HiLow (VIP).mp3','/media/bozdo/Новый том1/music/CASUAL/Minnesota - Curio/Minnesota - Curio - 05 HiLow (VIP).mp3',false,'2018-10-30 14:23:57.123 +00:00','2018-10-30 14:23:57.123 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 05 HiLow (VIP).mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Minnesota - Curio/Minnesota - Curio - 05 HiLow (VIP).mp3',"updatedAt"='2018-10-30 14:23:57.123 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::133] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3','/media/bozdo/Новый том1/music/CASUAL/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3',false,'2018-10-30 14:23:57.129 +00:00','2018-10-30 14:23:57.129 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3',"updatedAt"='2018-10-30 14:23:57.129 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::140] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3','/media/bozdo/Новый том1/music/CASUAL/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3',false,'2018-10-30 14:23:57.135 +00:00','2018-10-30 14:23:57.135 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3',"updatedAt"='2018-10-30 14:23:57.135 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::146] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3','/media/bozdo/Новый том1/music/CASUAL/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3',false,'2018-10-30 14:23:57.141 +00:00','2018-10-30 14:23:57.141 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3',"updatedAt"='2018-10-30 14:23:57.141 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::151] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3','/media/bozdo/Новый том1/music/CASUAL/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3',false,'2018-10-30 14:23:57.147 +00:00','2018-10-30 14:23:57.147 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3',"updatedAt"='2018-10-30 14:23:57.147 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::157] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3','/media/bozdo/Новый том1/music/CASUAL/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3',false,'2018-10-30 14:23:57.153 +00:00','2018-10-30 14:23:57.153 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3',"updatedAt"='2018-10-30 14:23:57.153 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::164] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('1969年 - ANNIVERSARY VOL​.​5 - 10 Escape to Heaven 上昇.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/1969年 - ANNIVERSARY VOL​.​5 - 10 Escape to Heaven 上昇.mp3',false,'2018-10-30 14:23:57.159 +00:00','2018-10-30 14:23:57.159 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='1969年 - ANNIVERSARY VOL​.​5 - 10 Escape to Heaven 上昇.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/1969年 - ANNIVERSARY VOL​.​5 - 10 Escape to Heaven 上昇.mp3',"updatedAt"='2018-10-30 14:23:57.159 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::170] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('AM ÀFFAIRS - ANNIVERSARY VOL​.​5 - 21 phonecall.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/AM ÀFFAIRS - ANNIVERSARY VOL​.​5 - 21 phonecall.mp3',false,'2018-10-30 14:23:57.166 +00:00','2018-10-30 14:23:57.166 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='AM ÀFFAIRS - ANNIVERSARY VOL​.​5 - 21 phonecall.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/AM ÀFFAIRS - ANNIVERSARY VOL​.​5 - 21 phonecall.mp3',"updatedAt"='2018-10-30 14:23:57.166 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::177] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('BRANDO - ANNIVERSARY VOL​.​5 - 17 TOSA -1. steps to god''s tower 2. outside forces closing in-.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/BRANDO - ANNIVERSARY VOL​.​5 - 17 TOSA -1. steps to god''s tower 2. outside forces closing in-.mp3',false,'2018-10-30 14:23:57.172 +00:00','2018-10-30 14:23:57.172 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='BRANDO - ANNIVERSARY VOL​.​5 - 17 TOSA -1. steps to god''s tower 2. outside forces closing in-.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/BRANDO - ANNIVERSARY VOL​.​5 - 17 TOSA -1. steps to god''s tower 2. outside forces closing in-.mp3',"updatedAt"='2018-10-30 14:23:57.172 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::183] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('BarbWalters - ANNIVERSARY VOL​.​5 - 18 My Eyes.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/BarbWalters - ANNIVERSARY VOL​.​5 - 18 My Eyes.mp3',false,'2018-10-30 14:23:57.179 +00:00','2018-10-30 14:23:57.179 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='BarbWalters - ANNIVERSARY VOL​.​5 - 18 My Eyes.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/BarbWalters - ANNIVERSARY VOL​.​5 - 18 My Eyes.mp3',"updatedAt"='2018-10-30 14:23:57.179 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::188] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Brat''ya - ANNIVERSARY VOL​.​5 - 19 Girl.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Brat''ya - ANNIVERSARY VOL​.​5 - 19 Girl.mp3',false,'2018-10-30 14:23:57.184 +00:00','2018-10-30 14:23:57.184 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Brat''ya - ANNIVERSARY VOL​.​5 - 19 Girl.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Brat''ya - ANNIVERSARY VOL​.​5 - 19 Girl.mp3',"updatedAt"='2018-10-30 14:23:57.184 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::195] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Cologne - ANNIVERSARY VOL​.​5 - 12 Take My Eyes.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Cologne - ANNIVERSARY VOL​.​5 - 12 Take My Eyes.mp3',false,'2018-10-30 14:23:57.190 +00:00','2018-10-30 14:23:57.190 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Cologne - ANNIVERSARY VOL​.​5 - 12 Take My Eyes.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Cologne - ANNIVERSARY VOL​.​5 - 12 Take My Eyes.mp3',"updatedAt"='2018-10-30 14:23:57.190 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::202] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Curb Cobain - ANNIVERSARY VOL​.​5 - 03 Back from hell.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Curb Cobain - ANNIVERSARY VOL​.​5 - 03 Back from hell.mp3',false,'2018-10-30 14:23:57.197 +00:00','2018-10-30 14:23:57.197 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Curb Cobain - ANNIVERSARY VOL​.​5 - 03 Back from hell.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Curb Cobain - ANNIVERSARY VOL​.​5 - 03 Back from hell.mp3',"updatedAt"='2018-10-30 14:23:57.197 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::207] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Diskette Park - ANNIVERSARY VOL​.​5 - 02 Listening.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Diskette Park - ANNIVERSARY VOL​.​5 - 02 Listening.mp3',false,'2018-10-30 14:23:57.203 +00:00','2018-10-30 14:23:57.203 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Diskette Park - ANNIVERSARY VOL​.​5 - 02 Listening.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Diskette Park - ANNIVERSARY VOL​.​5 - 02 Listening.mp3',"updatedAt"='2018-10-30 14:23:57.203 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::212] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('FM Skyline - ANNIVERSARY VOL​.​5 - 16 memory access.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/FM Skyline - ANNIVERSARY VOL​.​5 - 16 memory access.mp3',false,'2018-10-30 14:23:57.209 +00:00','2018-10-30 14:23:57.209 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='FM Skyline - ANNIVERSARY VOL​.​5 - 16 memory access.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/FM Skyline - ANNIVERSARY VOL​.​5 - 16 memory access.mp3',"updatedAt"='2018-10-30 14:23:57.209 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::218] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Golem Who Goes Fish - ANNIVERSARY VOL​.​5 - 20 Wrong Passage Taken.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Golem Who Goes Fish - ANNIVERSARY VOL​.​5 - 20 Wrong Passage Taken.mp3',false,'2018-10-30 14:23:57.214 +00:00','2018-10-30 14:23:57.214 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Golem Who Goes Fish - ANNIVERSARY VOL​.​5 - 20 Wrong Passage Taken.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Golem Who Goes Fish - ANNIVERSARY VOL​.​5 - 20 Wrong Passage Taken.mp3',"updatedAt"='2018-10-30 14:23:57.214 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::237] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('OMI5 - ANNIVERSARY VOL​.​5 - 06 Colossus (ft. bl00dwave).mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/OMI5 - ANNIVERSARY VOL​.​5 - 06 Colossus (ft. bl00dwave).mp3',false,'2018-10-30 14:23:57.221 +00:00','2018-10-30 14:23:57.221 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='OMI5 - ANNIVERSARY VOL​.​5 - 06 Colossus (ft. bl00dwave).mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/OMI5 - ANNIVERSARY VOL​.​5 - 06 Colossus (ft. bl00dwave).mp3',"updatedAt"='2018-10-30 14:23:57.221 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::244] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('OSC - ANNIVERSARY VOL​.​5 - 15 Cycles At Sundown.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/OSC - ANNIVERSARY VOL​.​5 - 15 Cycles At Sundown.mp3',false,'2018-10-30 14:23:57.239 +00:00','2018-10-30 14:23:57.239 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='OSC - ANNIVERSARY VOL​.​5 - 15 Cycles At Sundown.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/OSC - ANNIVERSARY VOL​.​5 - 15 Cycles At Sundown.mp3',"updatedAt"='2018-10-30 14:23:57.239 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::249] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Pop Up! - ANNIVERSARY VOL​.​5 - 13 Rose.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Pop Up! - ANNIVERSARY VOL​.​5 - 13 Rose.mp3',false,'2018-10-30 14:23:57.245 +00:00','2018-10-30 14:23:57.245 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Pop Up! - ANNIVERSARY VOL​.​5 - 13 Rose.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Pop Up! - ANNIVERSARY VOL​.​5 - 13 Rose.mp3',"updatedAt"='2018-10-30 14:23:57.245 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::256] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Shoji正治 - ANNIVERSARY VOL​.​5 - 01 OS2 WARP.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Shoji正治 - ANNIVERSARY VOL​.​5 - 01 OS2 WARP.mp3',false,'2018-10-30 14:23:57.252 +00:00','2018-10-30 14:23:57.252 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Shoji正治 - ANNIVERSARY VOL​.​5 - 01 OS2 WARP.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Shoji正治 - ANNIVERSARY VOL​.​5 - 01 OS2 WARP.mp3',"updatedAt"='2018-10-30 14:23:57.252 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::263] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Sonnig 991 - ANNIVERSARY VOL​.​5 - 09 Human Abstractions (ft. Fla.mingo).mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Sonnig 991 - ANNIVERSARY VOL​.​5 - 09 Human Abstractions (ft. Fla.mingo).mp3',false,'2018-10-30 14:23:57.258 +00:00','2018-10-30 14:23:57.258 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Sonnig 991 - ANNIVERSARY VOL​.​5 - 09 Human Abstractions (ft. Fla.mingo).mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Sonnig 991 - ANNIVERSARY VOL​.​5 - 09 Human Abstractions (ft. Fla.mingo).mp3',"updatedAt"='2018-10-30 14:23:57.258 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::270] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('US Golf 95 - ANNIVERSARY VOL​.​5 - 23 Kamakura Fanfare.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/US Golf 95 - ANNIVERSARY VOL​.​5 - 23 Kamakura Fanfare.mp3',false,'2018-10-30 14:23:57.265 +00:00','2018-10-30 14:23:57.265 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='US Golf 95 - ANNIVERSARY VOL​.​5 - 23 Kamakura Fanfare.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/US Golf 95 - ANNIVERSARY VOL​.​5 - 23 Kamakura Fanfare.mp3',"updatedAt"='2018-10-30 14:23:57.265 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::277] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Vista Kid Cruiser - ANNIVERSARY VOL​.​5 - 14 Ghost Girl.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Vista Kid Cruiser - ANNIVERSARY VOL​.​5 - 14 Ghost Girl.mp3',false,'2018-10-30 14:23:57.272 +00:00','2018-10-30 14:23:57.272 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Vista Kid Cruiser - ANNIVERSARY VOL​.​5 - 14 Ghost Girl.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/Vista Kid Cruiser - ANNIVERSARY VOL​.​5 - 14 Ghost Girl.mp3',"updatedAt"='2018-10-30 14:23:57.272 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::282] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('White Gavri''el - ANNIVERSARY VOL​.​5 - 07 Aerodynamic Dissemination.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/White Gavri''el - ANNIVERSARY VOL​.​5 - 07 Aerodynamic Dissemination.mp3',false,'2018-10-30 14:23:57.279 +00:00','2018-10-30 14:23:57.279 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='White Gavri''el - ANNIVERSARY VOL​.​5 - 07 Aerodynamic Dissemination.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/White Gavri''el - ANNIVERSARY VOL​.​5 - 07 Aerodynamic Dissemination.mp3',"updatedAt"='2018-10-30 14:23:57.279 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::291] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('b a k m a h n - ANNIVERSARY VOL​.​5 - 24 be gud.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/b a k m a h n - ANNIVERSARY VOL​.​5 - 24 be gud.mp3',false,'2018-10-30 14:23:57.287 +00:00','2018-10-30 14:23:57.287 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='b a k m a h n - ANNIVERSARY VOL​.​5 - 24 be gud.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/b a k m a h n - ANNIVERSARY VOL​.​5 - 24 be gud.mp3',"updatedAt"='2018-10-30 14:23:57.287 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::307] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('hyphyskazerbox - ANNIVERSARY VOL​.​5 - 11 I Am Isolation.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/hyphyskazerbox - ANNIVERSARY VOL​.​5 - 11 I Am Isolation.mp3',false,'2018-10-30 14:23:57.302 +00:00','2018-10-30 14:23:57.302 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='hyphyskazerbox - ANNIVERSARY VOL​.​5 - 11 I Am Isolation.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/hyphyskazerbox - ANNIVERSARY VOL​.​5 - 11 I Am Isolation.mp3',"updatedAt"='2018-10-30 14:23:57.302 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::314] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('odaxelagnia - ANNIVERSARY VOL​.​5 - 05 Digital Love Bootleg.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/odaxelagnia - ANNIVERSARY VOL​.​5 - 05 Digital Love Bootleg.mp3',false,'2018-10-30 14:23:57.309 +00:00','2018-10-30 14:23:57.309 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='odaxelagnia - ANNIVERSARY VOL​.​5 - 05 Digital Love Bootleg.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/odaxelagnia - ANNIVERSARY VOL​.​5 - 05 Digital Love Bootleg.mp3',"updatedAt"='2018-10-30 14:23:57.309 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::320] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('protonet-Works - ANNIVERSARY VOL​.​5 - 22 Stage 3- Overdrived Pelican Highway.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/protonet-Works - ANNIVERSARY VOL​.​5 - 22 Stage 3- Overdrived Pelican Highway.mp3',false,'2018-10-30 14:23:57.316 +00:00','2018-10-30 14:23:57.316 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='protonet-Works - ANNIVERSARY VOL​.​5 - 22 Stage 3- Overdrived Pelican Highway.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/protonet-Works - ANNIVERSARY VOL​.​5 - 22 Stage 3- Overdrived Pelican Highway.mp3',"updatedAt"='2018-10-30 14:23:57.316 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::327] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('☒ - ANNIVERSARY VOL​.​5 - 08 And I''m thinking About You... (ft. Pecetta).mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/☒ - ANNIVERSARY VOL​.​5 - 08 And I''m thinking About You... (ft. Pecetta).mp3',false,'2018-10-30 14:23:57.322 +00:00','2018-10-30 14:23:57.322 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='☒ - ANNIVERSARY VOL​.​5 - 08 And I''m thinking About You... (ft. Pecetta).mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/☒ - ANNIVERSARY VOL​.​5 - 08 And I''m thinking About You... (ft. Pecetta).mp3',"updatedAt"='2018-10-30 14:23:57.322 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::333] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('悲しい ANDROID - APARTMENT¶ - ANNIVERSARY VOL​.​5 - 04 I''m Falling for You.mp3','/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/悲しい ANDROID - APARTMENT¶ - ANNIVERSARY VOL​.​5 - 04 I''m Falling for You.mp3',false,'2018-10-30 14:23:57.328 +00:00','2018-10-30 14:23:57.328 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='悲しい ANDROID - APARTMENT¶ - ANNIVERSARY VOL​.​5 - 04 I''m Falling for You.mp3',"path"='/media/bozdo/Новый том1/music/CASUAL/Various Artists - ANNIVERSARY VOL_._5/悲しい ANDROID - APARTMENT¶ - ANNIVERSARY VOL​.​5 - 04 I''m Falling for You.mp3',"updatedAt"='2018-10-30 14:23:57.328 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::339] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('pavilion xool - Beautiful Love - 01 Beautiful Love.flac','/media/bozdo/Новый том1/music/CASUAL/pavilion xool - Beautiful Love/pavilion xool - Beautiful Love - 01 Beautiful Love.flac',false,'2018-10-30 14:23:57.335 +00:00','2018-10-30 14:23:57.335 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='pavilion xool - Beautiful Love - 01 Beautiful Love.flac',"path"='/media/bozdo/Новый том1/music/CASUAL/pavilion xool - Beautiful Love/pavilion xool - Beautiful Love - 01 Beautiful Love.flac',"updatedAt"='2018-10-30 14:23:57.335 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::345] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3','/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3',false,'2018-10-30 14:23:57.341 +00:00','2018-10-30 14:23:57.341 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3',"updatedAt"='2018-10-30 14:23:57.341 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::351] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3','/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3',false,'2018-10-30 14:23:57.347 +00:00','2018-10-30 14:23:57.347 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3',"updatedAt"='2018-10-30 14:23:57.347 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::357] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3','/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3',false,'2018-10-30 14:23:57.352 +00:00','2018-10-30 14:23:57.352 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3',"updatedAt"='2018-10-30 14:23:57.352 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::362] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3','/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3',false,'2018-10-30 14:23:57.359 +00:00','2018-10-30 14:23:57.359 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3',"updatedAt"='2018-10-30 14:23:57.359 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::369] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3','/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3',false,'2018-10-30 14:23:57.365 +00:00','2018-10-30 14:23:57.365 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3',"updatedAt"='2018-10-30 14:23:57.365 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::375] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3','/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3',false,'2018-10-30 14:23:57.371 +00:00','2018-10-30 14:23:57.371 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3',"updatedAt"='2018-10-30 14:23:57.371 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::380] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3','/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3',false,'2018-10-30 14:23:57.377 +00:00','2018-10-30 14:23:57.377 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3',"updatedAt"='2018-10-30 14:23:57.377 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::388] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 01 Edge.mp3','/media/bozdo/Новый том1/music/CLOUD/Minnesota - Curio/Minnesota - Curio - 01 Edge.mp3',false,'2018-10-30 14:23:57.384 +00:00','2018-10-30 14:23:57.384 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 01 Edge.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Minnesota - Curio/Minnesota - Curio - 01 Edge.mp3',"updatedAt"='2018-10-30 14:23:57.384 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::394] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 02 Technique.mp3','/media/bozdo/Новый том1/music/CLOUD/Minnesota - Curio/Minnesota - Curio - 02 Technique.mp3',false,'2018-10-30 14:23:57.390 +00:00','2018-10-30 14:23:57.390 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 02 Technique.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Minnesota - Curio/Minnesota - Curio - 02 Technique.mp3',"updatedAt"='2018-10-30 14:23:57.390 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::402] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 03 Dark Crystal.mp3','/media/bozdo/Новый том1/music/CLOUD/Minnesota - Curio/Minnesota - Curio - 03 Dark Crystal.mp3',false,'2018-10-30 14:23:57.397 +00:00','2018-10-30 14:23:57.397 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 03 Dark Crystal.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Minnesota - Curio/Minnesota - Curio - 03 Dark Crystal.mp3',"updatedAt"='2018-10-30 14:23:57.397 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::408] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 04 Desert Diamond.mp3','/media/bozdo/Новый том1/music/CLOUD/Minnesota - Curio/Minnesota - Curio - 04 Desert Diamond.mp3',false,'2018-10-30 14:23:57.404 +00:00','2018-10-30 14:23:57.404 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 04 Desert Diamond.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Minnesota - Curio/Minnesota - Curio - 04 Desert Diamond.mp3',"updatedAt"='2018-10-30 14:23:57.404 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::413] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 05 HiLow (VIP).mp3','/media/bozdo/Новый том1/music/CLOUD/Minnesota - Curio/Minnesota - Curio - 05 HiLow (VIP).mp3',false,'2018-10-30 14:23:57.410 +00:00','2018-10-30 14:23:57.410 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 05 HiLow (VIP).mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Minnesota - Curio/Minnesota - Curio - 05 HiLow (VIP).mp3',"updatedAt"='2018-10-30 14:23:57.410 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::421] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3','/media/bozdo/Новый том1/music/CLOUD/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3',false,'2018-10-30 14:23:57.415 +00:00','2018-10-30 14:23:57.415 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3',"updatedAt"='2018-10-30 14:23:57.415 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::427] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3','/media/bozdo/Новый том1/music/CLOUD/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3',false,'2018-10-30 14:23:57.423 +00:00','2018-10-30 14:23:57.423 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3',"updatedAt"='2018-10-30 14:23:57.423 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::433] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3','/media/bozdo/Новый том1/music/CLOUD/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3',false,'2018-10-30 14:23:57.429 +00:00','2018-10-30 14:23:57.429 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3',"updatedAt"='2018-10-30 14:23:57.429 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::438] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3','/media/bozdo/Новый том1/music/CLOUD/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3',false,'2018-10-30 14:23:57.434 +00:00','2018-10-30 14:23:57.434 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3',"updatedAt"='2018-10-30 14:23:57.434 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::444] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3','/media/bozdo/Новый том1/music/CLOUD/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3',false,'2018-10-30 14:23:57.440 +00:00','2018-10-30 14:23:57.440 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3',"updatedAt"='2018-10-30 14:23:57.440 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::451] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 01 DesignerClothes.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 01 DesignerClothes.mp3',false,'2018-10-30 14:23:57.447 +00:00','2018-10-30 14:23:57.447 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 01 DesignerClothes.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 01 DesignerClothes.mp3',"updatedAt"='2018-10-30 14:23:57.447 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::457] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 02 Ill Follow You.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 02 Ill Follow You.mp3',false,'2018-10-30 14:23:57.452 +00:00','2018-10-30 14:23:57.452 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 02 Ill Follow You.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 02 Ill Follow You.mp3',"updatedAt"='2018-10-30 14:23:57.452 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::462] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 03 Elastic Heart.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 03 Elastic Heart.mp3',false,'2018-10-30 14:23:57.458 +00:00','2018-10-30 14:23:57.458 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 03 Elastic Heart.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 03 Elastic Heart.mp3',"updatedAt"='2018-10-30 14:23:57.458 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::468] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 04 Love Me.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 04 Love Me.mp3',false,'2018-10-30 14:23:57.464 +00:00','2018-10-30 14:23:57.464 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 04 Love Me.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 04 Love Me.mp3',"updatedAt"='2018-10-30 14:23:57.464 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::475] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 05 Trinity.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 05 Trinity.mp3',false,'2018-10-30 14:23:57.471 +00:00','2018-10-30 14:23:57.471 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 05 Trinity.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 05 Trinity.mp3',"updatedAt"='2018-10-30 14:23:57.471 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::481] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 06 Die With Me.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 06 Die With Me.mp3',false,'2018-10-30 14:23:57.477 +00:00','2018-10-30 14:23:57.477 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 06 Die With Me.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 06 Die With Me.mp3',"updatedAt"='2018-10-30 14:23:57.477 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::489] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 07 Kalifina.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 07 Kalifina.mp3',false,'2018-10-30 14:23:57.483 +00:00','2018-10-30 14:23:57.483 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 07 Kalifina.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 07 Kalifina.mp3',"updatedAt"='2018-10-30 14:23:57.483 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::495] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 08 Aquatic Interlude.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 08 Aquatic Interlude.mp3',false,'2018-10-30 14:23:57.491 +00:00','2018-10-30 14:23:57.491 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 08 Aquatic Interlude.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 08 Aquatic Interlude.mp3',"updatedAt"='2018-10-30 14:23:57.491 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::503] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 09 Aria.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 09 Aria.mp3',false,'2018-10-30 14:23:57.499 +00:00','2018-10-30 14:23:57.499 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 09 Aria.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 09 Aria.mp3',"updatedAt"='2018-10-30 14:23:57.499 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::511] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 10 Fantasy.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 10 Fantasy.mp3',false,'2018-10-30 14:23:57.507 +00:00','2018-10-30 14:23:57.507 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 10 Fantasy.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 10 Fantasy.mp3',"updatedAt"='2018-10-30 14:23:57.507 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::517] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 11 Scary All Over.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 11 Scary All Over.mp3',false,'2018-10-30 14:23:57.513 +00:00','2018-10-30 14:23:57.513 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 11 Scary All Over.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 11 Scary All Over.mp3',"updatedAt"='2018-10-30 14:23:57.513 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::554] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 12 Moonlight.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 12 Moonlight.mp3',false,'2018-10-30 14:23:57.549 +00:00','2018-10-30 14:23:57.549 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 12 Moonlight.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 12 Moonlight.mp3',"updatedAt"='2018-10-30 14:23:57.549 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::560] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 13 Mondo.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 13 Mondo.mp3',false,'2018-10-30 14:23:57.556 +00:00','2018-10-30 14:23:57.556 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 13 Mondo.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 13 Mondo.mp3',"updatedAt"='2018-10-30 14:23:57.556 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::565] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 14 Jack Of Blades.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 14 Jack Of Blades.mp3',false,'2018-10-30 14:23:57.562 +00:00','2018-10-30 14:23:57.562 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 14 Jack Of Blades.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 14 Jack Of Blades.mp3',"updatedAt"='2018-10-30 14:23:57.562 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::572] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 15 Stranger.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 15 Stranger.mp3',false,'2018-10-30 14:23:57.567 +00:00','2018-10-30 14:23:57.567 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 15 Stranger.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 15 Stranger.mp3',"updatedAt"='2018-10-30 14:23:57.567 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::582] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 16 Mountain.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 16 Mountain.mp3',false,'2018-10-30 14:23:57.577 +00:00','2018-10-30 14:23:57.577 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 16 Mountain.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 16 Mountain.mp3',"updatedAt"='2018-10-30 14:23:57.577 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::590] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 17 Silence w- sosi.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 17 Silence w- sosi.mp3',false,'2018-10-30 14:23:57.584 +00:00','2018-10-30 14:23:57.584 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 17 Silence w- sosi.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 17 Silence w- sosi.mp3',"updatedAt"='2018-10-30 14:23:57.584 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::595] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 18 Blind Spot.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 18 Blind Spot.mp3',false,'2018-10-30 14:23:57.592 +00:00','2018-10-30 14:23:57.592 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 18 Blind Spot.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 18 Blind Spot.mp3',"updatedAt"='2018-10-30 14:23:57.592 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::603] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 19 When I Die.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 19 When I Die.mp3',false,'2018-10-30 14:23:57.599 +00:00','2018-10-30 14:23:57.599 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 19 When I Die.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 19 When I Die.mp3',"updatedAt"='2018-10-30 14:23:57.599 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::618] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('internetBoi - internetBoi Pure Imagination - 20 Pure Imagination.mp3','/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 20 Pure Imagination.mp3',false,'2018-10-30 14:23:57.611 +00:00','2018-10-30 14:23:57.611 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='internetBoi - internetBoi Pure Imagination - 20 Pure Imagination.mp3',"path"='/media/bozdo/Новый том1/music/CLOUD/internetBoi - internetBoi Pure Imagination/internetBoi - internetBoi Pure Imagination - 20 Pure Imagination.mp3',"updatedAt"='2018-10-30 14:23:57.611 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::627] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3','/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3',false,'2018-10-30 14:23:57.623 +00:00','2018-10-30 14:23:57.623 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3',"updatedAt"='2018-10-30 14:23:57.623 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::637] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3','/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3',false,'2018-10-30 14:23:57.630 +00:00','2018-10-30 14:23:57.630 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 02 Bully.mp3',"updatedAt"='2018-10-30 14:23:57.630 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::645] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3','/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3',false,'2018-10-30 14:23:57.639 +00:00','2018-10-30 14:23:57.639 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3',"updatedAt"='2018-10-30 14:23:57.639 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::654] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3','/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3',false,'2018-10-30 14:23:57.646 +00:00','2018-10-30 14:23:57.646 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 04 Tunnels Feat. Wax Future.mp3',"updatedAt"='2018-10-30 14:23:57.646 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::661] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3','/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3',false,'2018-10-30 14:23:57.657 +00:00','2018-10-30 14:23:57.657 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 05 Badness.mp3',"updatedAt"='2018-10-30 14:23:57.657 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::670] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3','/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3',false,'2018-10-30 14:23:57.664 +00:00','2018-10-30 14:23:57.664 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 06 Through Walls.mp3',"updatedAt"='2018-10-30 14:23:57.664 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::678] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3','/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3',false,'2018-10-30 14:23:57.673 +00:00','2018-10-30 14:23:57.673 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Esseks - Esseks - A HOLE IN THE FOURTH WALL/Esseks - Esseks - A HOLE IN THE FOURTH WALL - 07 Little Wires.mp3',"updatedAt"='2018-10-30 14:23:57.673 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::685] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 01 Edge.mp3','/media/bozdo/Новый том1/music/DUB/Minnesota - Curio/Minnesota - Curio - 01 Edge.mp3',false,'2018-10-30 14:23:57.680 +00:00','2018-10-30 14:23:57.680 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 01 Edge.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Minnesota - Curio/Minnesota - Curio - 01 Edge.mp3',"updatedAt"='2018-10-30 14:23:57.680 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::692] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 02 Technique.mp3','/media/bozdo/Новый том1/music/DUB/Minnesota - Curio/Minnesota - Curio - 02 Technique.mp3',false,'2018-10-30 14:23:57.687 +00:00','2018-10-30 14:23:57.687 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 02 Technique.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Minnesota - Curio/Minnesota - Curio - 02 Technique.mp3',"updatedAt"='2018-10-30 14:23:57.687 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::701] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 03 Dark Crystal.mp3','/media/bozdo/Новый том1/music/DUB/Minnesota - Curio/Minnesota - Curio - 03 Dark Crystal.mp3',false,'2018-10-30 14:23:57.696 +00:00','2018-10-30 14:23:57.696 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 03 Dark Crystal.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Minnesota - Curio/Minnesota - Curio - 03 Dark Crystal.mp3',"updatedAt"='2018-10-30 14:23:57.696 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::710] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 04 Desert Diamond.mp3','/media/bozdo/Новый том1/music/DUB/Minnesota - Curio/Minnesota - Curio - 04 Desert Diamond.mp3',false,'2018-10-30 14:23:57.703 +00:00','2018-10-30 14:23:57.703 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 04 Desert Diamond.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Minnesota - Curio/Minnesota - Curio - 04 Desert Diamond.mp3',"updatedAt"='2018-10-30 14:23:57.703 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::717] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Minnesota - Curio - 05 HiLow (VIP).mp3','/media/bozdo/Новый том1/music/DUB/Minnesota - Curio/Minnesota - Curio - 05 HiLow (VIP).mp3',false,'2018-10-30 14:23:57.711 +00:00','2018-10-30 14:23:57.711 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Minnesota - Curio - 05 HiLow (VIP).mp3',"path"='/media/bozdo/Новый том1/music/DUB/Minnesota - Curio/Minnesota - Curio - 05 HiLow (VIP).mp3',"updatedAt"='2018-10-30 14:23:57.711 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::722] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3','/media/bozdo/Новый том1/music/DUB/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3',false,'2018-10-30 14:23:57.718 +00:00','2018-10-30 14:23:57.718 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 01 Apocalypse Feat. Giometric.mp3',"updatedAt"='2018-10-30 14:23:57.718 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::731] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3','/media/bozdo/Новый том1/music/DUB/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3',false,'2018-10-30 14:23:57.725 +00:00','2018-10-30 14:23:57.725 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3',"updatedAt"='2018-10-30 14:23:57.725 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::738] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3','/media/bozdo/Новый том1/music/DUB/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3',false,'2018-10-30 14:23:57.733 +00:00','2018-10-30 14:23:57.733 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3',"updatedAt"='2018-10-30 14:23:57.733 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::744] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3','/media/bozdo/Новый том1/music/DUB/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3',false,'2018-10-30 14:23:57.740 +00:00','2018-10-30 14:23:57.740 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 04 Blocc Is Hawt.mp3',"updatedAt"='2018-10-30 14:23:57.740 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::754] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3','/media/bozdo/Новый том1/music/DUB/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3',false,'2018-10-30 14:23:57.747 +00:00','2018-10-30 14:23:57.747 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3',"path"='/media/bozdo/Новый том1/music/DUB/Tripzy Leary- GDubz - Arrival/Tripzy Leary, GDubz - Arrival - 05 Break It Down Feat. Giometric.mp3',"updatedAt"='2018-10-30 14:23:57.747 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::766] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('TLZMN - TLZMN - The Hood - 01 Storm.flac','/media/bozdo/Новый том1/music/DUBSTEP/TLZMN - TLZMN - The Hood/TLZMN - TLZMN - The Hood - 01 Storm.flac',false,'2018-10-30 14:23:57.756 +00:00','2018-10-30 14:23:57.756 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='TLZMN - TLZMN - The Hood - 01 Storm.flac',"path"='/media/bozdo/Новый том1/music/DUBSTEP/TLZMN - TLZMN - The Hood/TLZMN - TLZMN - The Hood - 01 Storm.flac',"updatedAt"='2018-10-30 14:23:57.756 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::773] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('TLZMN - TLZMN - The Hood - 02 The Hood.flac','/media/bozdo/Новый том1/music/DUBSTEP/TLZMN - TLZMN - The Hood/TLZMN - TLZMN - The Hood - 02 The Hood.flac',false,'2018-10-30 14:23:57.769 +00:00','2018-10-30 14:23:57.769 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='TLZMN - TLZMN - The Hood - 02 The Hood.flac',"path"='/media/bozdo/Новый том1/music/DUBSTEP/TLZMN - TLZMN - The Hood/TLZMN - TLZMN - The Hood - 02 The Hood.flac',"updatedAt"='2018-10-30 14:23:57.769 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::779] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('TLZMN - TLZMN - The Hood - 03 Silo.flac','/media/bozdo/Новый том1/music/DUBSTEP/TLZMN - TLZMN - The Hood/TLZMN - TLZMN - The Hood - 03 Silo.flac',false,'2018-10-30 14:23:57.775 +00:00','2018-10-30 14:23:57.775 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='TLZMN - TLZMN - The Hood - 03 Silo.flac',"path"='/media/bozdo/Новый том1/music/DUBSTEP/TLZMN - TLZMN - The Hood/TLZMN - TLZMN - The Hood - 03 Silo.flac',"updatedAt"='2018-10-30 14:23:57.775 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::784] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('TLZMN - TLZMN - The Hood - 04 Phantom.flac','/media/bozdo/Новый том1/music/DUBSTEP/TLZMN - TLZMN - The Hood/TLZMN - TLZMN - The Hood - 04 Phantom.flac',false,'2018-10-30 14:23:57.781 +00:00','2018-10-30 14:23:57.781 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='TLZMN - TLZMN - The Hood - 04 Phantom.flac',"path"='/media/bozdo/Новый том1/music/DUBSTEP/TLZMN - TLZMN - The Hood/TLZMN - TLZMN - The Hood - 04 Phantom.flac',"updatedAt"='2018-10-30 14:23:57.781 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::791] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('TLZMN - TLZMN - The Hood - 05 Viper.flac','/media/bozdo/Новый том1/music/DUBSTEP/TLZMN - TLZMN - The Hood/TLZMN - TLZMN - The Hood - 05 Viper.flac',false,'2018-10-30 14:23:57.787 +00:00','2018-10-30 14:23:57.787 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='TLZMN - TLZMN - The Hood - 05 Viper.flac',"path"='/media/bozdo/Новый том1/music/DUBSTEP/TLZMN - TLZMN - The Hood/TLZMN - TLZMN - The Hood - 05 Viper.flac',"updatedAt"='2018-10-30 14:23:57.787 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::796] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 01 Timeless.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 01 Timeless.mp3',false,'2018-10-30 14:23:57.792 +00:00','2018-10-30 14:23:57.792 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 01 Timeless.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 01 Timeless.mp3',"updatedAt"='2018-10-30 14:23:57.792 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::802] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 02 Sunshine City.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 02 Sunshine City.mp3',false,'2018-10-30 14:23:57.798 +00:00','2018-10-30 14:23:57.798 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 02 Sunshine City.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 02 Sunshine City.mp3',"updatedAt"='2018-10-30 14:23:57.798 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::808] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 03 Wake Up.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 03 Wake Up.mp3',false,'2018-10-30 14:23:57.804 +00:00','2018-10-30 14:23:57.804 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 03 Wake Up.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 03 Wake Up.mp3',"updatedAt"='2018-10-30 14:23:57.804 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::813] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 04 Pink Jacket.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 04 Pink Jacket.mp3',false,'2018-10-30 14:23:57.809 +00:00','2018-10-30 14:23:57.809 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 04 Pink Jacket.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 04 Pink Jacket.mp3',"updatedAt"='2018-10-30 14:23:57.809 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::820] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 05 I Want You.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 05 I Want You.mp3',false,'2018-10-30 14:23:57.815 +00:00','2018-10-30 14:23:57.815 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 05 I Want You.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 05 I Want You.mp3',"updatedAt"='2018-10-30 14:23:57.815 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::825] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 06 Video Girl Yukiko.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 06 Video Girl Yukiko.mp3',false,'2018-10-30 14:23:57.821 +00:00','2018-10-30 14:23:57.821 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 06 Video Girl Yukiko.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 06 Video Girl Yukiko.mp3',"updatedAt"='2018-10-30 14:23:57.821 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::834] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 07 Honey Bunny.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 07 Honey Bunny.mp3',false,'2018-10-30 14:23:57.827 +00:00','2018-10-30 14:23:57.827 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 07 Honey Bunny.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 07 Honey Bunny.mp3',"updatedAt"='2018-10-30 14:23:57.827 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::840] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 08 Magic.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 08 Magic.mp3',false,'2018-10-30 14:23:57.835 +00:00','2018-10-30 14:23:57.835 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 08 Magic.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 08 Magic.mp3',"updatedAt"='2018-10-30 14:23:57.835 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::845] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 09 Dreamland.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 09 Dreamland.mp3',false,'2018-10-30 14:23:57.841 +00:00','2018-10-30 14:23:57.841 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 09 Dreamland.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 09 Dreamland.mp3',"updatedAt"='2018-10-30 14:23:57.841 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::854] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 10 Rainy Night.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 10 Rainy Night.mp3',false,'2018-10-30 14:23:57.850 +00:00','2018-10-30 14:23:57.850 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 10 Rainy Night.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 10 Rainy Night.mp3',"updatedAt"='2018-10-30 14:23:57.850 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::860] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 11 Lost.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 11 Lost.mp3',false,'2018-10-30 14:23:57.855 +00:00','2018-10-30 14:23:57.855 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 11 Lost.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 11 Lost.mp3',"updatedAt"='2018-10-30 14:23:57.855 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::865] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Desired - Timeless - 12 Into The Unknown.mp3','/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 12 Into The Unknown.mp3',false,'2018-10-30 14:23:57.861 +00:00','2018-10-30 14:23:57.861 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Desired - Timeless - 12 Into The Unknown.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/Desired - Timeless/Desired - Timeless - 12 Into The Unknown.mp3',"updatedAt"='2018-10-30 14:23:57.861 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::873] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Alpaca - Scintillate for a Moment presented by STERN - 09 サヨナラ.mp3','/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/Alpaca - Scintillate for a Moment presented by STERN - 09 サヨナラ.mp3',false,'2018-10-30 14:23:57.867 +00:00','2018-10-30 14:23:57.867 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Alpaca - Scintillate for a Moment presented by STERN - 09 サヨナラ.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/Alpaca - Scintillate for a Moment presented by STERN - 09 サヨナラ.mp3',"updatedAt"='2018-10-30 14:23:57.867 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::879] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Alpaca - Scintillate for a Moment presented by STERN - 10 サヨナラ (Uncensored Version).mp3','/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/Alpaca - Scintillate for a Moment presented by STERN - 10 サヨナラ (Uncensored Version).mp3',false,'2018-10-30 14:23:57.875 +00:00','2018-10-30 14:23:57.875 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Alpaca - Scintillate for a Moment presented by STERN - 10 サヨナラ (Uncensored Version).mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/Alpaca - Scintillate for a Moment presented by STERN - 10 サヨナラ (Uncensored Version).mp3',"updatedAt"='2018-10-30 14:23:57.875 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::884] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('J4 - Scintillate for a Moment presented by STERN - 01 Blue Hawaii.mp3','/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/J4 - Scintillate for a Moment presented by STERN - 01 Blue Hawaii.mp3',false,'2018-10-30 14:23:57.881 +00:00','2018-10-30 14:23:57.881 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='J4 - Scintillate for a Moment presented by STERN - 01 Blue Hawaii.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/J4 - Scintillate for a Moment presented by STERN - 01 Blue Hawaii.mp3',"updatedAt"='2018-10-30 14:23:57.881 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::890] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('TKN - Scintillate for a Moment presented by STERN - 05 GUMME.mp3','/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/TKN - Scintillate for a Moment presented by STERN - 05 GUMME.mp3',false,'2018-10-30 14:23:57.886 +00:00','2018-10-30 14:23:57.886 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='TKN - Scintillate for a Moment presented by STERN - 05 GUMME.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/TKN - Scintillate for a Moment presented by STERN - 05 GUMME.mp3',"updatedAt"='2018-10-30 14:23:57.886 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::896] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('gaburyu - Scintillate for a Moment presented by STERN - 07 Gelato Kiss.mp3','/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/gaburyu - Scintillate for a Moment presented by STERN - 07 Gelato Kiss.mp3',false,'2018-10-30 14:23:57.892 +00:00','2018-10-30 14:23:57.892 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='gaburyu - Scintillate for a Moment presented by STERN - 07 Gelato Kiss.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/gaburyu - Scintillate for a Moment presented by STERN - 07 Gelato Kiss.mp3',"updatedAt"='2018-10-30 14:23:57.892 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::902] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('tekalu - Scintillate for a Moment presented by STERN - 04 Fancy Girl.mp3','/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/tekalu - Scintillate for a Moment presented by STERN - 04 Fancy Girl.mp3',false,'2018-10-30 14:23:57.899 +00:00','2018-10-30 14:23:57.899 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='tekalu - Scintillate for a Moment presented by STERN - 04 Fancy Girl.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/tekalu - Scintillate for a Moment presented by STERN - 04 Fancy Girl.mp3',"updatedAt"='2018-10-30 14:23:57.899 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::908] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('シカクドット - Scintillate for a Moment presented by STERN - 03 ■Night & Day□.mp3','/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/シカクドット - Scintillate for a Moment presented by STERN - 03 ■Night & Day□.mp3',false,'2018-10-30 14:23:57.905 +00:00','2018-10-30 14:23:57.905 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='シカクドット - Scintillate for a Moment presented by STERN - 03 ■Night & Day□.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/シカクドット - Scintillate for a Moment presented by STERN - 03 ■Night & Day□.mp3',"updatedAt"='2018-10-30 14:23:57.905 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::915] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('市瀬るぽ - Scintillate for a Moment presented by STERN - 06 CRAFT.mp3','/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/市瀬るぽ - Scintillate for a Moment presented by STERN - 06 CRAFT.mp3',false,'2018-10-30 14:23:57.911 +00:00','2018-10-30 14:23:57.911 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='市瀬るぽ - Scintillate for a Moment presented by STERN - 06 CRAFT.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/市瀬るぽ - Scintillate for a Moment presented by STERN - 06 CRAFT.mp3',"updatedAt"='2018-10-30 14:23:57.911 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::919] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('後藤尚 - Scintillate for a Moment presented by STERN - 02 未だに.mp3','/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/後藤尚 - Scintillate for a Moment presented by STERN - 02 未だに.mp3',false,'2018-10-30 14:23:57.916 +00:00','2018-10-30 14:23:57.916 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='後藤尚 - Scintillate for a Moment presented by STERN - 02 未だに.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/後藤尚 - Scintillate for a Moment presented by STERN - 02 未だに.mp3',"updatedAt"='2018-10-30 14:23:57.916 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::925] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('後藤尚 - Scintillate for a Moment presented by STERN - 08 独り森の中.mp3','/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/後藤尚 - Scintillate for a Moment presented by STERN - 08 独り森の中.mp3',false,'2018-10-30 14:23:57.922 +00:00','2018-10-30 14:23:57.922 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='後藤尚 - Scintillate for a Moment presented by STERN - 08 独り森の中.mp3',"path"='/media/bozdo/Новый том1/music/KAWAI/V.A. - Scintillate for a Moment presented by STERN/後藤尚 - Scintillate for a Moment presented by STERN - 08 独り森の中.mp3',"updatedAt"='2018-10-30 14:23:57.922 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::931] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Bt Maly feat.お食事 - 渋谷コンピ -Shibuya Tokyo Mirai- - 11 Baby Clap.flac','/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/Bt Maly feat.お食事 - 渋谷コンピ -Shibuya Tokyo Mirai- - 11 Baby Clap.flac',false,'2018-10-30 14:23:57.927 +00:00','2018-10-30 14:23:57.927 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Bt Maly feat.お食事 - 渋谷コンピ -Shibuya Tokyo Mirai- - 11 Baby Clap.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/Bt Maly feat.お食事 - 渋谷コンピ -Shibuya Tokyo Mirai- - 11 Baby Clap.flac',"updatedAt"='2018-10-30 14:23:57.927 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::936] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Magnetite - 渋谷コンピ -Shibuya Tokyo Mirai- - 08 Draw a dream.flac','/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/Magnetite - 渋谷コンピ -Shibuya Tokyo Mirai- - 08 Draw a dream.flac',false,'2018-10-30 14:23:57.933 +00:00','2018-10-30 14:23:57.933 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Magnetite - 渋谷コンピ -Shibuya Tokyo Mirai- - 08 Draw a dream.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/Magnetite - 渋谷コンピ -Shibuya Tokyo Mirai- - 08 Draw a dream.flac',"updatedAt"='2018-10-30 14:23:57.933 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::943] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('SORANA - 渋谷コンピ -Shibuya Tokyo Mirai- - 10 The Invisible Night.flac','/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/SORANA - 渋谷コンピ -Shibuya Tokyo Mirai- - 10 The Invisible Night.flac',false,'2018-10-30 14:23:57.939 +00:00','2018-10-30 14:23:57.939 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='SORANA - 渋谷コンピ -Shibuya Tokyo Mirai- - 10 The Invisible Night.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/SORANA - 渋谷コンピ -Shibuya Tokyo Mirai- - 10 The Invisible Night.flac',"updatedAt"='2018-10-30 14:23:57.939 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::948] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('mayrock - 渋谷コンピ -Shibuya Tokyo Mirai- - 05 Week End.flac','/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/mayrock - 渋谷コンピ -Shibuya Tokyo Mirai- - 05 Week End.flac',false,'2018-10-30 14:23:57.945 +00:00','2018-10-30 14:23:57.945 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='mayrock - 渋谷コンピ -Shibuya Tokyo Mirai- - 05 Week End.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/mayrock - 渋谷コンピ -Shibuya Tokyo Mirai- - 05 Week End.flac',"updatedAt"='2018-10-30 14:23:57.945 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::954] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('wagnar - 渋谷コンピ -Shibuya Tokyo Mirai- - 09 uphill, downhill.flac','/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/wagnar - 渋谷コンピ -Shibuya Tokyo Mirai- - 09 uphill, downhill.flac',false,'2018-10-30 14:23:57.950 +00:00','2018-10-30 14:23:57.950 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='wagnar - 渋谷コンピ -Shibuya Tokyo Mirai- - 09 uphill, downhill.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/wagnar - 渋谷コンピ -Shibuya Tokyo Mirai- - 09 uphill, downhill.flac',"updatedAt"='2018-10-30 14:23:57.950 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::964] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('あるふぁ feat.薛南 - 渋谷コンピ -Shibuya Tokyo Mirai- - 01 キャラメルマキアート.flac','/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/あるふぁ feat.薛南 - 渋谷コンピ -Shibuya Tokyo Mirai- - 01 キャラメルマキアート.flac',false,'2018-10-30 14:23:57.957 +00:00','2018-10-30 14:23:57.957 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='あるふぁ feat.薛南 - 渋谷コンピ -Shibuya Tokyo Mirai- - 01 キャラメルマキアート.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/あるふぁ feat.薛南 - 渋谷コンピ -Shibuya Tokyo Mirai- - 01 キャラメルマキアート.flac',"updatedAt"='2018-10-30 14:23:57.957 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::971] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('チュペ feat.雨音 涙 - 渋谷コンピ -Shibuya Tokyo Mirai- - 02 husky&scramble.flac','/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/チュペ feat.雨音 涙 - 渋谷コンピ -Shibuya Tokyo Mirai- - 02 husky&scramble.flac',false,'2018-10-30 14:23:57.966 +00:00','2018-10-30 14:23:57.966 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='チュペ feat.雨音 涙 - 渋谷コンピ -Shibuya Tokyo Mirai- - 02 husky&scramble.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/チュペ feat.雨音 涙 - 渋谷コンピ -Shibuya Tokyo Mirai- - 02 husky&scramble.flac',"updatedAt"='2018-10-30 14:23:57.966 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::978] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('ビーカーP feat.Dai-T - 渋谷コンピ -Shibuya Tokyo Mirai- - 04 サニーデイ.flac','/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/ビーカーP feat.Dai-T - 渋谷コンピ -Shibuya Tokyo Mirai- - 04 サニーデイ.flac',false,'2018-10-30 14:23:57.974 +00:00','2018-10-30 14:23:57.974 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='ビーカーP feat.Dai-T - 渋谷コンピ -Shibuya Tokyo Mirai- - 04 サニーデイ.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/ビーカーP feat.Dai-T - 渋谷コンピ -Shibuya Tokyo Mirai- - 04 サニーデイ.flac',"updatedAt"='2018-10-30 14:23:57.974 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::986] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('ロイヤル六法全書 - 渋谷コンピ -Shibuya Tokyo Mirai- - 06 ぼっち遊びのディストピア.flac','/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/ロイヤル六法全書 - 渋谷コンピ -Shibuya Tokyo Mirai- - 06 ぼっち遊びのディストピア.flac',false,'2018-10-30 14:23:57.980 +00:00','2018-10-30 14:23:57.980 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='ロイヤル六法全書 - 渋谷コンピ -Shibuya Tokyo Mirai- - 06 ぼっち遊びのディストピア.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/ロイヤル六法全書 - 渋谷コンピ -Shibuya Tokyo Mirai- - 06 ぼっち遊びのディストピア.flac',"updatedAt"='2018-10-30 14:23:57.980 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::992] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('夕立P - 渋谷コンピ -Shibuya Tokyo Mirai- - 07 ライアーライアー.flac','/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/夕立P - 渋谷コンピ -Shibuya Tokyo Mirai- - 07 ライアーライアー.flac',false,'2018-10-30 14:23:57.988 +00:00','2018-10-30 14:23:57.988 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='夕立P - 渋谷コンピ -Shibuya Tokyo Mirai- - 07 ライアーライアー.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/夕立P - 渋谷コンピ -Shibuya Tokyo Mirai- - 07 ライアーライアー.flac',"updatedAt"='2018-10-30 14:23:57.988 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:57::998] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('雲収集業者 - 渋谷コンピ -Shibuya Tokyo Mirai- - 03 鳥になったら.flac','/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/雲収集業者 - 渋谷コンピ -Shibuya Tokyo Mirai- - 03 鳥になったら.flac',false,'2018-10-30 14:23:57.994 +00:00','2018-10-30 14:23:57.994 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='雲収集業者 - 渋谷コンピ -Shibuya Tokyo Mirai- - 03 鳥になったら.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/Various Artists - 渋谷コンピ -Shibuya Tokyo Mirai/雲収集業者 - 渋谷コンピ -Shibuya Tokyo Mirai- - 03 鳥になったら.flac',"updatedAt"='2018-10-30 14:23:57.994 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::008] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('DOG NOISE - commune310 summer 2018 B - 07 BLUE ROOM feat. 楽天斎 & 栄免建設株式会社.flac','/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/DOG NOISE - commune310 summer 2018 B - 07 BLUE ROOM feat. 楽天斎 & 栄免建設株式会社.flac',false,'2018-10-30 14:23:57.999 +00:00','2018-10-30 14:23:57.999 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='DOG NOISE - commune310 summer 2018 B - 07 BLUE ROOM feat. 楽天斎 & 栄免建設株式会社.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/DOG NOISE - commune310 summer 2018 B - 07 BLUE ROOM feat. 楽天斎 & 栄免建設株式会社.flac',"updatedAt"='2018-10-30 14:23:57.999 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::014] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('HiRoSYO - commune310 summer 2018 B - 10 夏休み.flac','/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/HiRoSYO - commune310 summer 2018 B - 10 夏休み.flac',false,'2018-10-30 14:23:58.009 +00:00','2018-10-30 14:23:58.009 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='HiRoSYO - commune310 summer 2018 B - 10 夏休み.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/HiRoSYO - commune310 summer 2018 B - 10 夏休み.flac',"updatedAt"='2018-10-30 14:23:58.009 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::019] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('STAR JAXX - commune310 summer 2018 B - 04 Shall We-.flac','/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/STAR JAXX - commune310 summer 2018 B - 04 Shall We-.flac',false,'2018-10-30 14:23:58.016 +00:00','2018-10-30 14:23:58.016 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='STAR JAXX - commune310 summer 2018 B - 04 Shall We-.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/STAR JAXX - commune310 summer 2018 B - 04 Shall We-.flac',"updatedAt"='2018-10-30 14:23:58.016 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::026] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('kazmasa - commune310 summer 2018 B - 01 Melting Emotion.flac','/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/kazmasa - commune310 summer 2018 B - 01 Melting Emotion.flac',false,'2018-10-30 14:23:58.022 +00:00','2018-10-30 14:23:58.022 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='kazmasa - commune310 summer 2018 B - 01 Melting Emotion.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/kazmasa - commune310 summer 2018 B - 01 Melting Emotion.flac',"updatedAt"='2018-10-30 14:23:58.022 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::037] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('kissmenerdygirl - commune310 summer 2018 B - 08 Where You At-.flac','/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/kissmenerdygirl - commune310 summer 2018 B - 08 Where You At-.flac',false,'2018-10-30 14:23:58.032 +00:00','2018-10-30 14:23:58.032 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='kissmenerdygirl - commune310 summer 2018 B - 08 Where You At-.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/kissmenerdygirl - commune310 summer 2018 B - 08 Where You At-.flac',"updatedAt"='2018-10-30 14:23:58.032 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::047] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('osirasekita - commune310 summer 2018 B - 09 Hanabi.flac','/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/osirasekita - commune310 summer 2018 B - 09 Hanabi.flac',false,'2018-10-30 14:23:58.039 +00:00','2018-10-30 14:23:58.039 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='osirasekita - commune310 summer 2018 B - 09 Hanabi.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/osirasekita - commune310 summer 2018 B - 09 Hanabi.flac',"updatedAt"='2018-10-30 14:23:58.039 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::054] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('the sub account - commune310 summer 2018 B - 05 the other side.flac','/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/the sub account - commune310 summer 2018 B - 05 the other side.flac',false,'2018-10-30 14:23:58.049 +00:00','2018-10-30 14:23:58.049 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='the sub account - commune310 summer 2018 B - 05 the other side.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/the sub account - commune310 summer 2018 B - 05 the other side.flac',"updatedAt"='2018-10-30 14:23:58.049 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::060] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('yoswu - commune310 summer 2018 B - 06 Eを探す日常 (yoswu Remix).flac','/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/yoswu - commune310 summer 2018 B - 06 Eを探す日常 (yoswu Remix).flac',false,'2018-10-30 14:23:58.057 +00:00','2018-10-30 14:23:58.057 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='yoswu - commune310 summer 2018 B - 06 Eを探す日常 (yoswu Remix).flac',"path"='/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/yoswu - commune310 summer 2018 B - 06 Eを探す日常 (yoswu Remix).flac',"updatedAt"='2018-10-30 14:23:58.057 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::067] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('つぶされBOZZ - commune310 summer 2018 B - 02 Alibaba.flac','/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/つぶされBOZZ - commune310 summer 2018 B - 02 Alibaba.flac',false,'2018-10-30 14:23:58.063 +00:00','2018-10-30 14:23:58.063 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='つぶされBOZZ - commune310 summer 2018 B - 02 Alibaba.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/つぶされBOZZ - commune310 summer 2018 B - 02 Alibaba.flac',"updatedAt"='2018-10-30 14:23:58.063 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::073] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('百合蔵 - commune310 summer 2018 B - 03 Medjed.flac','/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/百合蔵 - commune310 summer 2018 B - 03 Medjed.flac',false,'2018-10-30 14:23:58.070 +00:00','2018-10-30 14:23:58.070 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='百合蔵 - commune310 summer 2018 B - 03 Medjed.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/commune310 - commune310 summer 2018 B/百合蔵 - commune310 summer 2018 B - 03 Medjed.flac',"updatedAt"='2018-10-30 14:23:58.070 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::081] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('nikoi0227 - Feel My Emotions - 01 Feel My Emotions.flac','/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 01 Feel My Emotions.flac',false,'2018-10-30 14:23:58.078 +00:00','2018-10-30 14:23:58.078 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='nikoi0227 - Feel My Emotions - 01 Feel My Emotions.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 01 Feel My Emotions.flac',"updatedAt"='2018-10-30 14:23:58.078 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::093] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('nikoi0227 - Feel My Emotions - 02 Stay with me.flac','/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 02 Stay with me.flac',false,'2018-10-30 14:23:58.089 +00:00','2018-10-30 14:23:58.089 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='nikoi0227 - Feel My Emotions - 02 Stay with me.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 02 Stay with me.flac',"updatedAt"='2018-10-30 14:23:58.089 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::099] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('nikoi0227 - Feel My Emotions - 03 Futurity.flac','/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 03 Futurity.flac',false,'2018-10-30 14:23:58.095 +00:00','2018-10-30 14:23:58.095 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='nikoi0227 - Feel My Emotions - 03 Futurity.flac',"path"='/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 03 Futurity.flac',"updatedAt"='2018-10-30 14:23:58.095 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::105] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('nikoi0227 - Feel My Emotions - 04 Feel My Emotions (DenDora Remix).flac','/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 04 Feel My Emotions (DenDora Remix).flac',false,'2018-10-30 14:23:58.101 +00:00','2018-10-30 14:23:58.101 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='nikoi0227 - Feel My Emotions - 04 Feel My Emotions (DenDora Remix).flac',"path"='/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 04 Feel My Emotions (DenDora Remix).flac',"updatedAt"='2018-10-30 14:23:58.101 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::112] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('nikoi0227 - Feel My Emotions - 05 Feel My Emotions (Mysteka Remix).flac','/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 05 Feel My Emotions (Mysteka Remix).flac',false,'2018-10-30 14:23:58.109 +00:00','2018-10-30 14:23:58.109 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='nikoi0227 - Feel My Emotions - 05 Feel My Emotions (Mysteka Remix).flac',"path"='/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 05 Feel My Emotions (Mysteka Remix).flac',"updatedAt"='2018-10-30 14:23:58.109 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::120] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('nikoi0227 - Feel My Emotions - 06 Feel My Emotions (telestro Remix).flac','/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 06 Feel My Emotions (telestro Remix).flac',false,'2018-10-30 14:23:58.116 +00:00','2018-10-30 14:23:58.116 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='nikoi0227 - Feel My Emotions - 06 Feel My Emotions (telestro Remix).flac',"path"='/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 06 Feel My Emotions (telestro Remix).flac',"updatedAt"='2018-10-30 14:23:58.116 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::127] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('nikoi0227 - Feel My Emotions - 07 Feel My Emotions (テクの幸太朗 Remix).flac','/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 07 Feel My Emotions (テクの幸太朗 Remix).flac',false,'2018-10-30 14:23:58.123 +00:00','2018-10-30 14:23:58.123 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='nikoi0227 - Feel My Emotions - 07 Feel My Emotions (テクの幸太朗 Remix).flac',"path"='/media/bozdo/Новый том1/music/KAWAI/nikoi0227 - Feel My Emotions/nikoi0227 - Feel My Emotions - 07 Feel My Emotions (テクの幸太朗 Remix).flac',"updatedAt"='2018-10-30 14:23:58.123 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::134] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 01 Revolution.mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 01 Revolution.mp3',false,'2018-10-30 14:23:58.130 +00:00','2018-10-30 14:23:58.130 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 01 Revolution.mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 01 Revolution.mp3',"updatedAt"='2018-10-30 14:23:58.130 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::140] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 02 Jah Will Be There.mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 02 Jah Will Be There.mp3',false,'2018-10-30 14:23:58.136 +00:00','2018-10-30 14:23:58.136 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 02 Jah Will Be There.mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 02 Jah Will Be There.mp3',"updatedAt"='2018-10-30 14:23:58.136 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::145] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 03 Rock It Ina Dance.mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 03 Rock It Ina Dance.mp3',false,'2018-10-30 14:23:58.142 +00:00','2018-10-30 14:23:58.142 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 03 Rock It Ina Dance.mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 03 Rock It Ina Dance.mp3',"updatedAt"='2018-10-30 14:23:58.142 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::152] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 04 Skin Teeth.mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 04 Skin Teeth.mp3',false,'2018-10-30 14:23:58.148 +00:00','2018-10-30 14:23:58.148 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 04 Skin Teeth.mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 04 Skin Teeth.mp3',"updatedAt"='2018-10-30 14:23:58.148 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::159] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 05 Heathen Wage.mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 05 Heathen Wage.mp3',false,'2018-10-30 14:23:58.155 +00:00','2018-10-30 14:23:58.155 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 05 Heathen Wage.mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 05 Heathen Wage.mp3',"updatedAt"='2018-10-30 14:23:58.155 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::165] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 06 Fight for your Rights.mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 06 Fight for your Rights.mp3',false,'2018-10-30 14:23:58.161 +00:00','2018-10-30 14:23:58.161 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 06 Fight for your Rights.mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 06 Fight for your Rights.mp3',"updatedAt"='2018-10-30 14:23:58.161 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::171] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 07 No Peace.mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 07 No Peace.mp3',false,'2018-10-30 14:23:58.167 +00:00','2018-10-30 14:23:58.167 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 07 No Peace.mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 07 No Peace.mp3',"updatedAt"='2018-10-30 14:23:58.167 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::178] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 08 We All.mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 08 We All.mp3',false,'2018-10-30 14:23:58.174 +00:00','2018-10-30 14:23:58.174 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 08 We All.mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 08 We All.mp3',"updatedAt"='2018-10-30 14:23:58.174 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::184] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 09 Twisted Sheets.mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 09 Twisted Sheets.mp3',false,'2018-10-30 14:23:58.181 +00:00','2018-10-30 14:23:58.181 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 09 Twisted Sheets.mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 09 Twisted Sheets.mp3',"updatedAt"='2018-10-30 14:23:58.181 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::194] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 10 Natty Dread (Feat. Ranking Joe).mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 10 Natty Dread (Feat. Ranking Joe).mp3',false,'2018-10-30 14:23:58.190 +00:00','2018-10-30 14:23:58.190 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 10 Natty Dread (Feat. Ranking Joe).mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 10 Natty Dread (Feat. Ranking Joe).mp3',"updatedAt"='2018-10-30 14:23:58.190 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::204] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 11 Boom (Wah Da Da Deng).mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 11 Boom (Wah Da Da Deng).mp3',false,'2018-10-30 14:23:58.199 +00:00','2018-10-30 14:23:58.199 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 11 Boom (Wah Da Da Deng).mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 11 Boom (Wah Da Da Deng).mp3',"updatedAt"='2018-10-30 14:23:58.199 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::210] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 12 Black Skin King.mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 12 Black Skin King.mp3',false,'2018-10-30 14:23:58.206 +00:00','2018-10-30 14:23:58.206 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 12 Black Skin King.mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 12 Black Skin King.mp3',"updatedAt"='2018-10-30 14:23:58.206 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::216] [INFO]: Executing (default): CREATE OR REPLACE FUNCTION pg_temp.sequelize_upsert(OUT created boolean, OUT primary_key text)  AS $func$ BEGIN INSERT INTO "tracks"."tracks" ("name","path","deleted","createdAt","updatedAt") VALUES ('Hempress Sativa - Unconquerebel - 13 Made I Whole.mp3','/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 13 Made I Whole.mp3',false,'2018-10-30 14:23:58.213 +00:00','2018-10-30 14:23:58.213 +00:00'); created := true; EXCEPTION WHEN unique_violation THEN UPDATE "tracks"."tracks" SET "name"='Hempress Sativa - Unconquerebel - 13 Made I Whole.mp3',"path"='/media/bozdo/Новый том1/music/RAGGE/Hempress Sativa - Unconquerebel/Hempress Sativa - Unconquerebel - 13 Made I Whole.mp3',"updatedAt"='2018-10-30 14:23:58.213 +00:00' WHERE ("id" IS NULL); created := false; END; $func$ LANGUAGE plpgsql; SELECT * FROM pg_temp.sequelize_upsert();
[10/30/2018 - 17:23:58::254] [INFO]: Executing (default): select 
        tracks.tracks."name"
        ,tracks.tracks."path"
    from tracks.tracks
      join tastes.tastes on tastes.tastes.track_id = tracks.tracks.id
      join users.users on users.users.id = tastes.tastes.user_id
      where users.users."name" = '1' and tastes.tastes.deleted <> true
[10/30/2018 - 17:23:58::272] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[10/30/2018 - 17:23:58::275] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."deleted" = false AND "tracks"."uploader_id" = 1;
[10/30/2018 - 17:24:22::837] [INFO]: Executing (default): SELECT "id" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."name" = 'Cologne - Crisis - 02 Dusty Fingers.mp3' LIMIT 1;
[10/30/2018 - 17:24:22::843] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[10/30/2018 - 17:24:22::849] [INFO]: Executing (default): SELECT "user_id", "track_id", "deleted", "createdAt", "updatedAt" FROM "tastes"."tastes" AS "tastes" WHERE "tastes"."deleted" = false AND "tastes"."track_id" = 2 AND "tastes"."user_id" = 1;
[10/30/2018 - 19:42:09::872] [INFO]: user disconnected
[10/30/2018 - 19:49:02::099] [INFO]: [SEMPAI.HELP] Приложение запущено на порту: 4000
[10/30/2018 - 19:49:02::307] [INFO]: [SocketIO] Слушает на порту 4001
[10/30/2018 - 19:49:02::316] [INFO]: [Redis]: Успешное подключение
[10/30/2018 - 19:49:02::321] [INFO]: [Redis]: Готов к использованию
[10/30/2018 - 19:49:02::389] [INFO]: Executing (default): SELECT 1+1 AS result
[10/30/2018 - 19:49:02::390] [INFO]: [Sequelize]: Успешное подключение к БД sempai под юзером sempai
[10/30/2018 - 19:49:02::409] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS links;
[10/30/2018 - 19:49:02::415] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS users;
[10/30/2018 - 19:49:02::417] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS tastes;
[10/30/2018 - 19:49:02::419] [INFO]: Executing (default): CREATE SCHEMA IF NOT EXISTS tracks;
[10/30/2018 - 19:49:02::421] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "links"."links" ("id"  SERIAL UNIQUE , "link" VARCHAR(1000) NOT NULL, "descr" VARCHAR(4000) NOT NULL, "user_id" INTEGER NOT NULL, "abstract" VARCHAR(200) NOT NULL, "deleted" BOOLEAN DEFAULT 'false', "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
[10/30/2018 - 19:49:02::425] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'links' AND s.oid = t.relnamespace AND s.nspname = 'links' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 19:49:02::441] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "users"."users" ("id"  SERIAL UNIQUE , "name" VARCHAR(40) NOT NULL, "pwd" VARCHAR(40) NOT NULL, "role_id" INTEGER NOT NULL, "deleted" BOOLEAN DEFAULT 'false', "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
[10/30/2018 - 19:49:02::443] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' AND s.oid = t.relnamespace AND s.nspname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 19:49:02::454] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "tracks"."tracks" ("id"  SERIAL UNIQUE , "name" VARCHAR(1024) NOT NULL, "path" VARCHAR(1024) NOT NULL, "uploader_id" INTEGER, "deleted" BOOLEAN DEFAULT 'false', "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
[10/30/2018 - 19:49:02::456] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tracks' AND s.oid = t.relnamespace AND s.nspname = 'tracks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 19:49:02::462] [INFO]: Executing (default): CREATE TABLE IF NOT EXISTS "tastes"."tastes" ("user_id" INTEGER NOT NULL  REFERENCES "users"."users" ("id") ON DELETE NO ACTION ON UPDATE CASCADE, "track_id" INTEGER NOT NULL  REFERENCES "tracks"."tracks" ("id") ON DELETE NO ACTION ON UPDATE CASCADE, "deleted" BOOLEAN DEFAULT false, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("user_id","track_id"));
[10/30/2018 - 19:49:02::464] [INFO]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tastes' AND s.oid = t.relnamespace AND s.nspname = 'tastes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[10/30/2018 - 19:49:02::476] [INFO]: Executing (default): INSERT INTO "users"."users" ("id","name","pwd","role_id","deleted","createdAt","updatedAt") VALUES (DEFAULT,'1','1',1,false,'2018-10-30 16:49:02.469 +00:00','2018-10-30 16:49:02.469 +00:00') RETURNING *;
[10/30/2018 - 19:49:02::485] [INFO]: Executing (default): INSERT INTO "users"."users" ("id","name","pwd","role_id","deleted","createdAt","updatedAt") VALUES (DEFAULT,'2','2',1,false,'2018-10-30 16:49:02.483 +00:00','2018-10-30 16:49:02.483 +00:00') RETURNING *;
[10/30/2018 - 19:49:40::589] [INFO]: Executing (default): SELECT "id", "name", "pwd", "role_id", "deleted", "createdAt", "updatedAt" FROM "users"."users" AS "users" WHERE "users"."name" = '1' AND "users"."pwd" = '1' LIMIT 1;
[10/30/2018 - 19:49:43::595] [INFO]: Executing (default): SELECT "id", "link", "descr", "user_id", "abstract", "deleted", "createdAt", "updatedAt" FROM "links"."links" AS "links";
[10/30/2018 - 19:49:46::144] [INFO]: Executing (default): SELECT "id", "link", "descr", "user_id", "abstract", "deleted", "createdAt", "updatedAt" FROM "links"."links" AS "links";
[10/30/2018 - 19:49:46::722] [INFO]: Успешное прохождение авторизации при подключении к сокету
[10/30/2018 - 19:49:46::724] [INFO]: User connected
[10/30/2018 - 19:49:46::729] [INFO]: process.env.CONTENT_PATH = 
[10/30/2018 - 19:49:47::291] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks";
[10/30/2018 - 19:49:47::339] [INFO]: Executing (default): select 
        tracks.tracks."name"
        ,tracks.tracks."path"
    from tracks.tracks
      join tastes.tastes on tastes.tastes.track_id = tracks.tracks.id
      join users.users on users.users.id = tastes.tastes.user_id
      where users.users."name" = '1' and tastes.tastes.deleted <> true
[10/30/2018 - 19:49:47::353] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[10/30/2018 - 19:49:47::357] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."deleted" = false AND "tracks"."uploader_id" = 1;
[10/30/2018 - 19:49:50::034] [INFO]: Executing (default): SELECT "id", "link", "descr", "user_id", "abstract", "deleted", "createdAt", "updatedAt" FROM "links"."links" AS "links";
[10/30/2018 - 20:00:47::784] [INFO]: user disconnected
[10/30/2018 - 20:00:53::588] [INFO]: Executing (default): SELECT "id", "name", "pwd", "role_id", "deleted", "createdAt", "updatedAt" FROM "users"."users" AS "users" WHERE "users"."name" = '1' AND "users"."pwd" = '1' LIMIT 1;
[10/30/2018 - 20:00:53::672] [INFO]: Успешное прохождение авторизации при подключении к сокету
[10/30/2018 - 20:00:53::672] [INFO]: User connected
[10/30/2018 - 20:00:53::675] [INFO]: process.env.CONTENT_PATH = 
[10/30/2018 - 20:00:53::733] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks";
[10/30/2018 - 20:00:53::807] [INFO]: Executing (default): select 
        tracks.tracks."name"
        ,tracks.tracks."path"
    from tracks.tracks
      join tastes.tastes on tastes.tastes.track_id = tracks.tracks.id
      join users.users on users.users.id = tastes.tastes.user_id
      where users.users."name" = '1' and tastes.tastes.deleted <> true
[10/30/2018 - 20:00:53::823] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[10/30/2018 - 20:00:53::827] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."deleted" = false AND "tracks"."uploader_id" = 1;
[10/30/2018 - 20:06:15::903] [INFO]: user disconnected
[10/30/2018 - 20:08:46::211] [INFO]: Executing (default): SELECT "id", "name", "pwd", "role_id", "deleted", "createdAt", "updatedAt" FROM "users"."users" AS "users" WHERE "users"."name" = '1' AND "users"."pwd" = '11' LIMIT 1;
[10/30/2018 - 20:08:48::175] [INFO]: Executing (default): SELECT "id", "name", "pwd", "role_id", "deleted", "createdAt", "updatedAt" FROM "users"."users" AS "users" WHERE "users"."name" = '1' AND "users"."pwd" = '11' LIMIT 1;
[10/30/2018 - 20:08:49::213] [INFO]: Executing (default): SELECT "id", "name", "pwd", "role_id", "deleted", "createdAt", "updatedAt" FROM "users"."users" AS "users" WHERE "users"."name" = '1' AND "users"."pwd" = '1' LIMIT 1;
[10/30/2018 - 20:08:49::306] [INFO]: Успешное прохождение авторизации при подключении к сокету
[10/30/2018 - 20:08:49::307] [INFO]: User connected
[10/30/2018 - 20:08:49::315] [INFO]: process.env.CONTENT_PATH = 
[10/30/2018 - 20:08:49::965] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks";
[10/30/2018 - 20:08:50::420] [INFO]: Executing (default): select 
        tracks.tracks."name"
        ,tracks.tracks."path"
    from tracks.tracks
      join tastes.tastes on tastes.tastes.track_id = tracks.tracks.id
      join users.users on users.users.id = tastes.tastes.user_id
      where users.users."name" = '1' and tastes.tastes.deleted <> true
[10/30/2018 - 20:08:50::459] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[10/30/2018 - 20:08:50::462] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."deleted" = false AND "tracks"."uploader_id" = 1;
[10/30/2018 - 20:08:51::851] [INFO]: Executing (default): SELECT "id", "link", "descr", "user_id", "abstract", "deleted", "createdAt", "updatedAt" FROM "links"."links" AS "links";
[10/30/2018 - 20:08:52::464] [INFO]: Успешное прохождение авторизации при подключении к сокету
[10/30/2018 - 20:08:52::465] [INFO]: User connected
[10/30/2018 - 20:08:52::469] [INFO]: process.env.CONTENT_PATH = 
[10/30/2018 - 20:08:52::523] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks";
[10/30/2018 - 20:08:52::561] [INFO]: Executing (default): select 
        tracks.tracks."name"
        ,tracks.tracks."path"
    from tracks.tracks
      join tastes.tastes on tastes.tastes.track_id = tracks.tracks.id
      join users.users on users.users.id = tastes.tastes.user_id
      where users.users."name" = '1' and tastes.tastes.deleted <> true
[10/30/2018 - 20:08:52::573] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[10/30/2018 - 20:08:52::576] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."deleted" = false AND "tracks"."uploader_id" = 1;
[10/30/2018 - 20:09:01::072] [INFO]: Executing (default): SELECT "id" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."name" = 'Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3' LIMIT 1;
[10/30/2018 - 20:09:01::078] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[10/30/2018 - 20:09:01::082] [INFO]: Executing (default): SELECT "user_id", "track_id", "deleted", "createdAt", "updatedAt" FROM "tastes"."tastes" AS "tastes" WHERE "tastes"."deleted" = false AND "tastes"."track_id" = 49 AND "tastes"."user_id" = 1;
[10/30/2018 - 20:21:05::591] [INFO]: Executing (default): SELECT "id" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."name" = 'Tripzy Leary, GDubz - Arrival - 02 Sweet Earth.mp3' LIMIT 1;
[10/30/2018 - 20:21:05::595] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[10/30/2018 - 20:21:05::599] [INFO]: Executing (default): SELECT "user_id", "track_id", "deleted", "createdAt", "updatedAt" FROM "tastes"."tastes" AS "tastes" WHERE "tastes"."deleted" = false AND "tastes"."track_id" = 48 AND "tastes"."user_id" = 1;
[10/30/2018 - 20:21:13::618] [INFO]: Executing (default): SELECT "id" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."name" = 'Tripzy Leary, GDubz - Arrival - 03 Interdimensional.mp3' LIMIT 1;
[10/30/2018 - 20:21:13::622] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[10/30/2018 - 20:21:13::627] [INFO]: Executing (default): SELECT "user_id", "track_id", "deleted", "createdAt", "updatedAt" FROM "tastes"."tastes" AS "tastes" WHERE "tastes"."deleted" = false AND "tastes"."track_id" = 49 AND "tastes"."user_id" = 1;
[10/30/2018 - 22:20:22::987] [INFO]: user disconnected
[10/30/2018 - 22:20:22::998] [INFO]: user disconnected
[11/01/2018 - 11:00:41::777] [INFO]: Executing (default): SELECT "id", "name", "pwd", "role_id", "deleted", "createdAt", "updatedAt" FROM "users"."users" AS "users" WHERE "users"."name" = '1' AND "users"."pwd" = '1' LIMIT 1;
[11/01/2018 - 11:00:43::128] [INFO]: Успешное прохождение авторизации при подключении к сокету
[11/01/2018 - 11:00:43::129] [INFO]: User connected
[11/01/2018 - 11:00:43::133] [INFO]: process.env.CONTENT_PATH = 
[11/01/2018 - 11:00:43::931] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks";
[11/01/2018 - 11:00:43::976] [INFO]: Executing (default): select 
        tracks.tracks."name"
        ,tracks.tracks."path"
    from tracks.tracks
      join tastes.tastes on tastes.tastes.track_id = tracks.tracks.id
      join users.users on users.users.id = tastes.tastes.user_id
      where users.users."name" = '1' and tastes.tastes.deleted <> true
[11/01/2018 - 11:00:43::991] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[11/01/2018 - 11:00:43::994] [INFO]: Executing (default): SELECT "id", "name", "path", "uploader_id", "deleted", "createdAt", "updatedAt" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."deleted" = false AND "tracks"."uploader_id" = 1;
[11/01/2018 - 11:00:53::206] [INFO]: Executing (default): SELECT "id" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."name" = 'Hempress Sativa - Unconquerebel - 03 Rock It Ina Dance.mp3' LIMIT 1;
[11/01/2018 - 11:00:53::210] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[11/01/2018 - 11:00:53::213] [INFO]: Executing (default): SELECT "user_id", "track_id", "deleted", "createdAt", "updatedAt" FROM "tastes"."tastes" AS "tastes" WHERE "tastes"."deleted" = false AND "tastes"."track_id" = 188 AND "tastes"."user_id" = 1;
[11/01/2018 - 11:01:04::606] [INFO]: Executing (default): SELECT "id" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."name" = 'Esseks - Esseks - A HOLE IN THE FOURTH WALL - 01 Heavy Meta.mp3' LIMIT 1;
[11/01/2018 - 11:01:04::609] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[11/01/2018 - 11:01:04::612] [INFO]: Executing (default): SELECT "user_id", "track_id", "deleted", "createdAt", "updatedAt" FROM "tastes"."tastes" AS "tastes" WHERE "tastes"."deleted" = false AND "tastes"."track_id" = 14 AND "tastes"."user_id" = 1;
[11/01/2018 - 11:01:30::108] [INFO]: Executing (default): SELECT "id" FROM "tracks"."tracks" AS "tracks" WHERE "tracks"."name" = 'Esseks - Esseks - A HOLE IN THE FOURTH WALL - 03 Only1.mp3' LIMIT 1;
[11/01/2018 - 11:01:30::112] [INFO]: Executing (default): SELECT "id" FROM "users"."users" AS "users" WHERE "users"."name" = '1' LIMIT 1;
[11/01/2018 - 11:01:30::116] [INFO]: Executing (default): SELECT "user_id", "track_id", "deleted", "createdAt", "updatedAt" FROM "tastes"."tastes" AS "tastes" WHERE "tastes"."deleted" = false AND "tastes"."track_id" = 16 AND "tastes"."user_id" = 1;
[11/01/2018 - 11:19:29::335] [INFO]: user disconnected
[11/01/2018 - 12:51:10::546] [INFO]: [Redis]: Повторное подключение
[11/01/2018 - 12:51:11::050] [INFO]: [Redis]: Повторное подключение
[11/01/2018 - 12:51:12::053] [INFO]: [Redis]: Повторное подключение
[11/01/2018 - 12:51:13::557] [INFO]: [Redis]: Повторное подключение
[11/01/2018 - 12:51:15::560] [INFO]: [Redis]: Повторное подключение
[11/01/2018 - 12:51:17::563] [INFO]: [Redis]: Повторное подключение
